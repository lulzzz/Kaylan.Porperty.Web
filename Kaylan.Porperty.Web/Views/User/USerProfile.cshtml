@model Kalyan.Property.Infrastructure.Models.Users
@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/unobtrusive/js")
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    //$(document).ready(function () {

    //    $("#imageBrows").change(function () {

    //        var File = this.files;
    //        if (File && Files[0]) {

    //            ReadImage(File[0]);
    //        }


    //    })


    //})
    //var ReadImage = function (file) {
    //    var reader = new FileReader;
    //    var image = new Image;
    //    reader.readAsDataURL(file);
    //    reader.onload = function(_file) {


    //        image.scr = _file.target.result;
    //        image.onload = function() {


    //            var height = this.height;
    //            var weigth = this.width;
    //            var type = file.type;
    //            var size = ~~(file.size / 1024) + "KB";

    //            $("#targetImg").attr('src', _file.target.result);
    //            $("#description").text("size:" + size + "," + height + "X" + width + "");
    //            $("#imageBrows").show();

    //        }
    //    }
    //}

    //var ClearPreview = function () {
    //    $("#imageBrows").val('');
    //    $("#description").text('');
    //    $("#imageBrows").hide();
    //}



    //function filepreview(input) {

    //    if(input.files && input.files[0] )
    //    {
    //        var reader = new FileReader();
    //        reader.onload = function(e)
    //        {
    //            $('#UploadForm +img').remove();
    //            $('#UploadForm').after('<img scr="' + e.target.result+'" width="200" height="200"/>');

    //        }
    //        reader.readAsDataURL(input.files[0]);
    //    }
    //}

    //$('#file').change(function () {
    //    filepreview(this);
    //});
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="margin-left:400px;">
 <h4>Users Profile</h4>
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-lg-3 col-md-3">
            <div class="row" style="margin-right:-150px;">

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsApproved)
                @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.profileimage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="padding-left:70px;">

            <img src="" srcset="@Url.Content(Model.profileimage)" style="margin-left:100px;" class="img-placeholder" alt="" width="100" height="100"><h3 style="margin-left:60px;">

                <div style="display:none">
                    @Html.EditorFor(model => model.profileimage, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.profileimage, "", new { @class = "text-danger" })
        </div>
    </div>
                


                
                    <div class="btn-primary">
                        <input type="file" id="file"  name="file"/>
                    </div>
                
                <br/>
                <br />

                @*<div>
                    <div id="imagePreview" class="thumbnail">
                        <img class="img-responsive" id="targetImg" />


                        <div class="caption">
                              <a href="#" onclick="ClearPreview ()"><i class="glyphicon glyphicon-trash"> </i></a>
                            <p id="description"></p>

                        </div>
                        </div>
                    </div>*@







  

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.EmailConfirmed)
                                        @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
             

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" style="display:none">
                                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlattributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.PhoneNumberConfirmed)
                                        @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.TwoFactorEnabled)
                                        @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.LockoutEnabled)
                                        @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" style="display:none">
                                @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" style="padding-left:70px;">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <center>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="margin-left:0px;">
                                <input type="submit" value="Save" class="btn btn-danger" style="margin-left:-220px;"/>
                            </div>
                        </div>
                    </center>
               
            </div>
}


